{"ast":null,"code":"var _jsxFileName = \"/home/disa/Dropbox/Practicas/gallery/src/Components/gallery/Gallery.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Styles from './Gallery.module.css';\nimport { useEffect, useState } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Gallery = () => {\n  _s();\n\n  function importAll(r) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace('./', '')] = r(item);\n    });\n    return images;\n  }\n\n  const imgFolder = `../../Images/`;\n  console.log(imgFolder);\n  console.log(imgFolder.default);\n  const images = importAll(require.context(\"../../Images/\", true, /\\.(png|jpe?g|svg)$/));\n\n  const fs = require('fs');\n\n  fs.readdirSync(imgFolder).forEach(file => {\n    const img_src = require(`${imgFolder}${file}`);\n\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img_src,\n      alt: \"aa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  });\n  const imagesName = [];\n  Object.values(images).map(i => {\n    let arr = i.default.split(\".\");\n    let name = arr[0].split(\"/\")[3];\n    let format = arr[2];\n    imagesName.push(name + \".\" + format);\n    return \"A\";\n  });\n  const [model, setModel] = useState(false);\n  const [tempImgSrc, setTempImgSrc] = useState('');\n\n  const getImage = img => {\n    setTempImgSrc(img);\n    setModel(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: model ? Styles.open : Styles.model,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: tempImgSrc,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: () => setModel(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.galleryContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.imagess,\n        children: imagesName.map(im => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.pics,\n          onClick: () => getImage(images[im].default),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: Styles.image,\n            src: images[im].default,\n            alt: \"no carga\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Gallery, \"N1hrjkAr6TYv4y2iFw/CG/bJFSs=\");\n\n_c = Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/home/disa/Dropbox/Practicas/gallery/src/Components/gallery/Gallery.jsx"],"names":["React","Styles","useEffect","useState","CloseIcon","Gallery","importAll","r","images","keys","forEach","item","index","replace","imgFolder","console","log","default","require","context","fs","readdirSync","file","img_src","imagesName","Object","values","map","i","arr","split","name","format","push","model","setModel","tempImgSrc","setTempImgSrc","getImage","img","open","galleryContainer","imagess","im","pics","image"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Styles from './Gallery.module.css'\nimport { useEffect, useState } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport const Gallery = () => {\n    function importAll(r) {\n        let images = {};\n         r.keys().forEach((item, index) => { images[item.replace('./', '')] = r(item); });\n        return images\n       }\n       const imgFolder = `../../Images/`;\n       console.log(imgFolder)\n       console.log(imgFolder.default)\n    const images = importAll(require.context(\"../../Images/\", true, /\\.(png|jpe?g|svg)$/));\n\n    \n    const fs = require('fs');\n\n    fs.readdirSync(imgFolder).forEach(file => {\n    const img_src = require(`${imgFolder}${file}`);\n    return <img src={img_src} alt=\"aa\"/>;\n    });\n\n       const imagesName = [];\n       Object.values(images).map( (i) => {\n           let arr = i.default.split(\".\");\n           let name = arr[0].split(\"/\")[3];\n           let format = arr[2]\n           imagesName.push(name + \".\" + format)\n           \n           return \"A\"\n           \n       })\n       \n\n        const [model,setModel] = useState(false);\n        const [tempImgSrc,setTempImgSrc] = useState('');\n        const getImage = (img) => {\n            setTempImgSrc(img);\n            setModel(true);\n    \n       }\n\n       \n\n    return (\n        <>\n        <div className={model ? Styles.open : Styles.model}>\n            <img src={tempImgSrc} alt=\"\"/>\n            <CloseIcon onClick={() => setModel(false) } />\n        </div>\n\n        <div className = {Styles.galleryContainer}>\n            <div className = {Styles.imagess}>\n                {imagesName.map((im) => \n                    <div className={Styles.pics} onClick={() => getImage(images[im].default)}>\n                        <img className = {Styles.image} src={images[im].default} alt=\"no carga\"/>\n                    </div>\n                )}\n            </div>\n           \n        </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}